#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Myfirst
  module MyEnum
    ENUM1 = 0
    ENUM2 = 1
    ENUM3 = 2
    VALUE_MAP = {0 => "ENUM1", 1 => "ENUM2", 2 => "ENUM3"}
    VALID_VALUES = Set.new([ENUM1, ENUM2, ENUM3]).freeze
  end

  class MyStruct
    include ::Thrift::Struct, ::Thrift::Struct_Union
    MYBOOL = 1
    MYBYTE = 2
    MYI16 = 3
    MYI32 = 4
    MYI64 = 5
    MYDOUBLE = 6
    MYSTRING = 7
    MYLIST = 8
    MYSET = 9
    MYMAP = 10

    FIELDS = {
      MYBOOL => {:type => ::Thrift::Types::BOOL, :name => 'mybool'},
      MYBYTE => {:type => ::Thrift::Types::BYTE, :name => 'mybyte'},
      MYI16 => {:type => ::Thrift::Types::I16, :name => 'myi16'},
      MYI32 => {:type => ::Thrift::Types::I32, :name => 'myi32'},
      MYI64 => {:type => ::Thrift::Types::I64, :name => 'myi64'},
      MYDOUBLE => {:type => ::Thrift::Types::DOUBLE, :name => 'mydouble'},
      MYSTRING => {:type => ::Thrift::Types::STRING, :name => 'mystring'},
      MYLIST => {:type => ::Thrift::Types::LIST, :name => 'mylist', :element => {:type => ::Thrift::Types::I32}},
      MYSET => {:type => ::Thrift::Types::SET, :name => 'myset', :element => {:type => ::Thrift::Types::I32}},
      MYMAP => {:type => ::Thrift::Types::MAP, :name => 'mymap', :key => {:type => ::Thrift::Types::I32}, :value => {:type => ::Thrift::Types::I32}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class MyUnion < ::Thrift::Union
    include ::Thrift::Struct_Union
    class << self
      def mybool(val)
        MyUnion.new(:mybool, val)
      end

      def mystring(val)
        MyUnion.new(:mystring, val)
      end
    end

    MYBOOL = 1
    MYSTRING = 2

    FIELDS = {
      MYBOOL => {:type => ::Thrift::Types::BOOL, :name => 'mybool'},
      MYSTRING => {:type => ::Thrift::Types::STRING, :name => 'mystring'}
    }

    def struct_fields; FIELDS; end

    def validate
      raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
    end

    ::Thrift::Union.generate_accessors self
  end

  class MyError < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ERROR_CODE = 1
    ERROR_DESCRIPTION = 2

    FIELDS = {
      ERROR_CODE => {:type => ::Thrift::Types::I32, :name => 'error_code'},
      ERROR_DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'error_description'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end
