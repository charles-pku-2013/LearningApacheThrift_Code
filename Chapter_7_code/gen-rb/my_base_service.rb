#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'mybase_types'

module Mybase
  module MyBaseService
    class Client
      include ::Thrift::Client

      def save_to_log(message, filename)
        send_save_to_log(message, filename)
        recv_save_to_log()
      end

      def send_save_to_log(message, filename)
        send_message('save_to_log', Save_to_log_args, :message => message, :filename => filename)
      end

      def recv_save_to_log()
        result = receive_message(Save_to_log_result)
        raise result.err1 unless result.err1.nil?
        raise result.err2 unless result.err2.nil?
        raise result.err3 unless result.err3.nil?
        return
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_save_to_log(seqid, iprot, oprot)
        args = read_args(iprot, Save_to_log_args)
        result = Save_to_log_result.new()
        begin
          @handler.save_to_log(args.message, args.filename)
        rescue ::Mybase::MessageTooShort => err1
          result.err1 = err1
        rescue ::Mybase::InvalidFileName => err2
          result.err2 = err2
        rescue ::Mybase::CantWriteToFile => err3
          result.err3 = err3
        end
        write_result(result, oprot, 'save_to_log', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Save_to_log_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      MESSAGE = 1
      FILENAME = 2

      FIELDS = {
        MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
        FILENAME => {:type => ::Thrift::Types::STRING, :name => 'filename'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Save_to_log_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ERR1 = 1
      ERR2 = 2
      ERR3 = 3

      FIELDS = {
        ERR1 => {:type => ::Thrift::Types::STRUCT, :name => 'err1', :class => ::Mybase::MessageTooShort},
        ERR2 => {:type => ::Thrift::Types::STRUCT, :name => 'err2', :class => ::Mybase::InvalidFileName},
        ERR3 => {:type => ::Thrift::Types::STRUCT, :name => 'err3', :class => ::Mybase::CantWriteToFile}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
